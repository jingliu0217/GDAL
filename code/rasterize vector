def RasterizeTheVector(raster_fn,vector_fn,ref_raster):
    '''
    :param raster_fn: output raster file
    :param vector_fn: input vector file
    :param ref_raster: ref raster with coordinate or you can define it by yourself
    '''

    NoData_value = 0
    radom_data = gdal.Open(ref_raster)
    pixel_size = radom_data.GetGeoTransform()[1]

    proj = radom_data.GetProjection()
    # Open the data source and read in the extent
    source_ds = ogr.Open(vector_fn)
    source_layer = source_ds.GetLayer()
    x_min, x_max, y_min, y_max = source_layer.GetExtent()

    vector_temp = get_file_name(vector_fn)
    vector_name = vector_temp.split('_')
    vector_name = vector_name[1]+vector_name[2][0:2]
    # Create the destination data source
    x_r = int((x_max - x_min) / pixel_size)
    y_r = int((y_max - y_min) / pixel_size)
    target_ds = gdal.GetDriverByName('GTiff').Create(raster_fn+'\\'+vector_name+'.tif', x_r, y_r, 1, gdal.GDT_Byte)
    target_ds.SetGeoTransform((x_min, pixel_size, 0, y_max, 0, -pixel_size))
    target_ds.SetProjection(proj)
    band = target_ds.GetRasterBand(1)
    band.SetNoDataValue(NoData_value)
    # Rasterize
    gdal.RasterizeLayer(target_ds, [1], source_layer, options=["ATTRIBUTE=DN"])
    target_ds=None
    band = None
